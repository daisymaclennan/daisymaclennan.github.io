{"version":3,"file":"static/webpack/static/development/pages/my-work.js.6bd0a470a075e09f0710.hot-update.js","sources":["webpack:///./pages/my-work/index.js"],"sourcesContent":["import Layout from '../../components/Layout'\nimport ExpandingSections from '../../components/ExpandingSections'\nimport Projects from '../../components/Projects'\nimport myWork from '../../static/myWork'\nimport React, {useState} from 'react'\n\nimport Slider from \"react-slick\"\n\nimport Lightbox from 'react-image-lightbox'\nimport 'react-image-lightbox/style.css'\n\nexport default () => {\n  const [activeDrops, setActiveDrops] = useState([])\n\n  var sliderSettings = {\n    slidesToShow: 2,\n    slidesToScroll: 1,\n    arrows: false,\n    dots: true\n  }\n\n  const [activeImage, setActiveImage] = useState({\n    photoIndex: 0,\n    isOpen: false\n  })\n  return(\n    <Layout>\n      <Projects>\n        {myWork.map(work => (\n\n          <div className=\"project\" key={work.slug}>\n            <h3 className=\"subheading\">\n              {work.title}\n            </h3>\n            <h5>\n              {work.time_period}\n            </h5>\n\n            <ExpandingSections>\n              <div className={`expandingSection`}>\n                <button className=\"link--icon\" onClick={(e) => {e.target.classList.toggle(\"open\")}}>\n                  Read more\n                <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"chevron-down\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"></path></svg>\n                </button>\n                  <div class='expandingSection--child'>\n                    <p>\n                      {work.description}\n                    </p>\n                  </div>\n              </div>\n\n              <div className=\"expandingSection\">\n                <button className=\"link--icon\" onClick={(e) => {e.target.classList.toggle(\"open\")}}>\n                  Gallery\n                  <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"chevron-down\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"></path></svg>\n                </button>\n                <div className='expandingSection--child'>\n                  <Slider {...sliderSettings}>\n                    {work.img.map(i => (\n                      <div onClick={() => setActiveImage({\n                                                          photoIndex: i.index,\n                                                          isOpen: true\n                                                        })}\n                           key={i.index}\n                      >\n                          <img src={`/static/img/${i.filename}`} alt={`${i.alt}`}/>\n                      </div>\n                    ))}\n                  </Slider>\n                </div>\n              </div>\n            </ExpandingSections>\n            {activeImage.isOpen && (\n              <Lightbox\n                isOpen\n                mainSrc={`/public/${work.img[activeImage.photoIndex].src}`}\n                onCloseRequest={() => setActiveImage({isOpen: false})}\n                imageCaption={work.img[activeImage.photoIndex].alt}\n              />\n            )}\n          </div>\n        ))}\n      </Projects>\n    </Layout>\n)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAJA;AAWA;AACA;AAFA;AAVA;AAAA;AACA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAgBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7CA;AAyDA;;;;A","sourceRoot":""}